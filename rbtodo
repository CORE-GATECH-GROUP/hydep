pick 877ae14 Provide a base serpent writer that handles nearly everything
pick df63284 Use textwrap module in SerpentWriter
pick e3a316b Provide BaseWriter.writeMainFile, used by SerpentWriter.writeBaseFile
pick 22236b0 Separate SerpentWriter mdep setting onto BaseWriter
pick 9af873f Break SerpentRunner on to a base class; num<X> -> X
pick 578c9f3 Pass index [default 0] when processing Serpent result file
pick ff5fcc5 Provide ExtDepRunner (patched) Serpent runner
f f6005b3 [SQ] Remove extra debugger from ExtDepRunner
e 19e4d7e [SQ] External depletion runner fixes
pick 2dbbbe2 Provide ExtDepWriter for coupling with (patched) Serpent
e 62498b2 [SQ] Various fixes to ExtDepWriter
r baf5780 [WIP] Fixing the restart file writer
f 42adafd [SQ] Better struct-packing with ExtDepWriter
pick 5c122b8 Start breaking out some shared SerpentSolver code
r df91a68 [WIP] Add CoupledSerpentSolver
f 7c85983 [SQ] Various fixes to CoupledSerpentSolver
f 67699ae [SQ] More bug fixes for CoupledSerpentSolver
f c89d0dc [SQ] Direct Serpent outputs to log file
pick d9cfaab Bring Serpent coupling interfaces into hydep.serpent
pick 00f66f2 Test the entire coupled sequence for a pincell

# Rebase 0dc2b03..c89d0dc onto c89d0dc (20 commands)
#
# Commands:
# p, pick <commit> = use commit
# r, reword <commit> = use commit, but edit the commit message
# e, edit <commit> = use commit, but stop for amending
# s, squash <commit> = use commit, but meld into previous commit
# f, fixup <commit> = like "squash", but discard this commit's log message
# x, exec <command> = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with 'git rebase --continue')
# d, drop <commit> = remove commit
# l, label <label> = label current HEAD with a name
# t, reset <label> = reset HEAD to a label
# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
# .       create a merge commit using the original merge commit's
# .       message (or the oneline, if no original merge commit was
# .       specified). Use -c <commit> to reword the commit message.
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
# Note that empty commits are commented out
